{"meta":{"title":"frogman","subtitle":"frogman","description":"frogman space","author":"Allen.S","url":"http://Frogman1s.github.io","root":"/"},"pages":[{"title":"留言板🍃","date":"2022-10-31T15:01:30.565Z","updated":"2022-10-31T15:01:30.565Z","comments":true,"path":"about/index.html","permalink":"http://frogman1s.github.io/about/index.html","excerpt":"","text":"🌱🌱🌱🌱🌱🌱🌱🌱🌱🌱🌱🌱🌱🌱🌱🌱🌱🌱🌱🌱🌱🌱🌱🌱🌱🌱🐸介绍一下我自己:我来自江苏🌏道行尚浅的程序员🦭喜欢运动–&gt;bodybuilding(新手福利期)🏃🏻‍️#java #爱吃食物的男孩子👦 #自律"},{"title":"","date":"2022-10-31T16:10:20.553Z","updated":"2022-10-31T16:10:20.553Z","comments":true,"path":"docs/index.html","permalink":"http://frogman1s.github.io/docs/index.html","excerpt":"","text":"2022.8.19广州·天河 2022·广州塔"},{"title":"所有分类","date":"2022-10-30T13:28:00.427Z","updated":"2022-10-30T06:25:56.278Z","comments":true,"path":"categories/index.html","permalink":"http://frogman1s.github.io/categories/index.html","excerpt":"","text":""},{"title":"友链","date":"2022-10-30T13:28:00.439Z","updated":"2022-10-30T04:50:30.268Z","comments":true,"path":"friends/index.html","permalink":"http://frogman1s.github.io/friends/index.html","excerpt":"人生未易相逢春潮带雨晚来急,野渡无人舟自横","text":"人生未易相逢春潮带雨晚来急,野渡无人舟自横 这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。如何自助添加友链？先友后链，在我们有一定了解了之后才可以交换友链，除此之外，您的网站还应满足以下条件： 合法的、非营利性、无商业广告有实质性原创内容的 HTTPS 站点第一步：新建 Issue 新建 GitHub Issue 按照模板格式填写并提交。 为了提高图片加载速度，建议优化头像： 打开 压缩图 上传自己的头像，将图片尺寸调整到 96px 后下载。将压缩后的图片上传到 ImgURL 免费图床 并使用此图片链接作为头像。第二步：添加友链并等待管理员审核 请添加本站到您的友链中，如果您也使用 issue 作为友链源，只需要告知您的友链源仓库即可。 您可以添加本站的任何一个域，下面只是一个例子。 title: Frogman1savatar:https://avatars.githubusercontent.com/u/80079743?s=400&amp;u=2225e0312791a9b2b3eb15568e80f2138d14ee89&amp;v=4url: https://Frogman1s.github.iodescription: 「Be Yourself Make a Difference」keywords: 搞事情🤣待管理员审核通过，添加了 active 标签后，回来刷新即可生效。"}],"posts":[{"title":"随笔","slug":"随笔","date":"2022-10-30T08:09:28.518Z","updated":"2022-10-30T08:09:28.518Z","comments":true,"path":"2022/10/30/随笔/","link":"","permalink":"http://frogman1s.github.io/2022/10/30/%E9%9A%8F%E7%AC%94/","excerpt":"","text":"这是一篇随笔。。。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://frogman1s.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[]},{"title":"Swagger2入门","slug":"Swagger2","date":"2022-10-30T08:01:12.324Z","updated":"2022-10-30T08:01:12.324Z","comments":true,"path":"2022/10/30/Swagger2/","link":"","permalink":"http://frogman1s.github.io/2022/10/30/Swagger2/","excerpt":"","text":"4. Swagger2 4.1 简介Swagger 是一套基于 OpenAPI 规范构建的开源工具，可以帮助我们设计、构建、记录以及使用 Rest API。 4.2 为什么使用Swagger当下很多公司都采取前后端分离的开发模式，前端和后端的工作由不同的工程师完成。在这种开发模式下， 维持一份及时更新且完整的 Rest API 文档将会极大的提高我们的工作效率。 传统意义上的文档都是后端开发人员手动编写的，相信大家也都知道这种方式很难保证文档的及时性， 这种文档久而久之也就会失去其参考意义，反而还会加大我们的沟通成本。 而 Swagger 给我们提供了一个全新的维护 API 文档的方式，下面我们就来了解一下它的优点： 1.代码变，文档变。只需要少量的注解，Swagger 就可以根据代码自动生成 API 文档，很好的保证了文档的时效性。2.跨语言性，支持 40 多种语言。3.Swagger UI 呈现出来的是一份可交互式的 API 文档，我们可以直接在文档页面尝试 API 的调用，省去了准备复杂的调用参数的过程。 4.3 快速入门4.3.1 引入依赖123456789&lt;dependency&gt; &lt;groupId&gt;io.springfox&lt;/groupId&gt; &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;io.springfox&lt;/groupId&gt; &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;&lt;/dependency&gt; 4.3.2 启用Swagger2在启动类上或者配置类加 @EnableSwagger2 注解 123456789@SpringBootApplication@MapperScan(&quot;com.sangeng.mapper&quot;)@EnableScheduling@EnableSwagger2public class SanGengBlogApplication &#123; public static void main(String[] args) &#123; SpringApplication.run(SanGengBlogApplication.class,args); &#125;&#125; 4.3.3 测试访问：http://localhost:7777/swagger-ui.html 注意其中localhost和7777要调整成实际项目的域名和端口号。 4.4 具体配置4.4.1 Controller配置4.4.1 @Api 注解属性介绍： tags 设置标签 description 设置描述信息 12345@RestController@RequestMapping(&quot;/comment&quot;)@Api(tags = &quot;评论&quot;,description = &quot;评论相关接口&quot;)public class CommentController &#123;&#125; 4.4.2 接口配置4.4.2.1 接口描述配置@ApiOperation12345@GetMapping(&quot;/linkCommentList&quot;)@ApiOperation(value = &quot;友链评论列表&quot;,notes = &quot;获取一页友链评论&quot;)public ResponseResult linkCommentList(Integer pageNum,Integer pageSize)&#123; return commentService.commentList(SystemConstants.LINK_COMMENT,null,pageNum,pageSize);&#125; 4.4.2.2 接口参数描述 @ApiImplicitParam 用于描述接口的参数，但是一个接口可能有多个参数，所以一般与 @ApiImplicitParams 组合使用。 12345678910@GetMapping(&quot;/linkCommentList&quot;)@ApiOperation(value = &quot;友链评论列表&quot;,notes = &quot;获取一页友链评论&quot;)@ApiImplicitParams(&#123; @ApiImplicitParam(name = &quot;pageNum&quot;,value = &quot;页号&quot;), @ApiImplicitParam(name = &quot;pageSize&quot;,value = &quot;每页大小&quot;)&#125;)public ResponseResult linkCommentList(Integer pageNum,Integer pageSize)&#123; return commentService.commentList(SystemConstants.LINK_COMMENT,null,pageNum,pageSize);&#125; 4.4.3 实体类配置4.4.3.1 实体的描述配置@ApiModel@ApiModel用于描述实体类。 1234567@Data@AllArgsConstructor@NoArgsConstructor@ApiModel(description = &quot;添加评论dto&quot;)public class AddCommentDto&#123; //..&#125; 4.4.3.2 实体的属性的描述配置@ApiModelProperty@ApiModelProperty用于描述实体的属性 12@ApiModelProperty(notes = &quot;评论类型（0代表文章评论，1代表友链评论）&quot;)private String type; 4.4.4 文档信息配置123456789101112131415161718192021@Configurationpublic class SwaggerConfig &#123; @Bean public Docket customDocket() &#123; return new Docket(DocumentationType.SWAGGER_2) .apiInfo(apiInfo()) .select() .apis(RequestHandlerSelectors.basePackage(&quot;com.sangeng.controller&quot;)) .build(); &#125; private ApiInfo apiInfo() &#123; Contact contact = new Contact(&quot;团队名&quot;, &quot;http://www.my.com&quot;, &quot;my@my.com&quot;); return new ApiInfoBuilder() .title(&quot;文档标题&quot;) .description(&quot;文档描述&quot;) .contact(contact) // 联系方式 .version(&quot;1.1.0&quot;) // 版本 .build(); &#125;&#125;","categories":[{"name":"java","slug":"java","permalink":"http://frogman1s.github.io/categories/java/"},{"name":"测试","slug":"测试","permalink":"http://frogman1s.github.io/categories/%E6%B5%8B%E8%AF%95/"}],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2022-10-29T12:16:36.554Z","updated":"2022-10-29T12:16:36.554Z","comments":true,"path":"2022/10/29/hello-world/","link":"","permalink":"http://frogman1s.github.io/2022/10/29/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"随笔","slug":"随笔","permalink":"http://frogman1s.github.io/categories/%E9%9A%8F%E7%AC%94/"},{"name":"java","slug":"java","permalink":"http://frogman1s.github.io/categories/java/"},{"name":"测试","slug":"测试","permalink":"http://frogman1s.github.io/categories/%E6%B5%8B%E8%AF%95/"}],"tags":[]}